{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    ">>> timeit.timeit(\"import numpy as np;a = np.arange(100).reshape(10,10);b=a+1; c=b*2; d=a.dot(b)-c;e=2/3*c+d; a -= e.astype(np.int64)\")\n",
    "10.873965595622394\n",
    "\n",
    ">>> timeit.timeit(\"import numpy as np;a = np.arange(100).reshape(10,10);b=a+1;a -= (2/3*b*2+a.dot(b)-b*2).astype(np.int64)\")\n",
    "12.733711163920816\n",
    ">>> timeit.timeit(\"import numpy as np;a = np.arange(100).reshape(10,10);b=a+1;e= (2/3*b*2+a.dot(b)-b*2).astype(np.int64);a-=e\")\n",
    "12.88294753529317\n",
    ">>> timeit.timeit(\"import numpy as np;a = np.arange(100).reshape(10,10);b=a+1;e= (2/3*b*2+a.dot(b)-b*2).astype(np.int64);a=a-e\")\n",
    "12.48272825253116\n",
    "\n",
    ">>> timeit.timeit('import numpy as np;a = np.arange(1000).reshape(10,10,10);b = a[:,:,np.newaxis,:];c=b*3;d=b/4.5')\n",
    "7.230386016381999\n",
    ">>> timeit.timeit('import numpy as np;a = np.arange(1000).reshape(10,10,10);c = a[:,:,np.newaxis,:]*3;d=a[:,:,np.newaxis,:]/4.5')\n",
    "7.658931475789359"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
